{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAGlCI,GAFcL,SAASC,cAAc,yBAE7BK,SAASJ,EAAQK,QACzBC,EAAOF,SAASH,EAAOI,OACvBE,EAASH,SAASF,EAASG,OAuCjC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CA9Cbb,EAAOsB,iBAAiB,UAExB,SAAkBC,GAChBA,EAAIC,iBAEJ,IAAIC,EAAW,EACXC,EAAepB,EAEnB,MAAMqB,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIlB,EAAQkB,GAAK,EAAG,CAClC,MAAMC,EAAUlB,EAAcc,EAAUC,GACrCI,MAAK,EAAClB,SAAEA,EAAUS,MAAAU,MACjBC,QAAQC,IAAI,uBAAqBrB,QAAiBmB,MAAU,IAE7DG,OAAM,EAACtB,SAAEA,EAAUS,MAAAc,MAClBH,QAAQC,IAAI,sBAAoBrB,QAAeuB,MAAU,IAG7DR,EAASS,KAAKP,GAEdJ,GAAY,EACZC,GAAgBjB,C,CAGlBK,QAAQuB,IAAIV,GACTG,MAAK,KACJE,QAAQC,IAAI,yBACZjC,EAAOsC,OAAO,IAEfJ,OAAM,KACLF,QAAQC,IAAI,iCAEZjC,EAAOsC,OAAO,G","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst submitBtnEl = document.querySelector('button[type=\"submit\"]');\n\nconst delay = parseInt(delayEl.value);\nconst step = parseInt(stepEl.value);\nconst amount = parseInt(amountEl.value);\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let position = 1;\n  let currentDelay = delay;\n\n  const promises = [];\n\n  for (let i = 0; i < amount; i += 1) {\n    const promise = createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    promises.push(promise);\n\n    position += 1;\n    currentDelay += step;\n  }\n\n  Promise.all(promises)\n    .then(() => {\n      console.log('All promises resolved');\n      formEl.reset();\n    })\n    .catch(() => {\n      console.log('At least one promise rejected');\n\n      formEl.reset();\n    });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$delay","parseInt","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","evt","preventDefault","position1","currentDelay","promises","i","promise","then","delay1","console","log","catch","delay2","push","all","reset"],"version":3,"file":"03-promises.042d82bd.js.map"}